pipeline {
    agent any

    stages {
        stage('Notify GitHub') {
          steps {
            script {
              // Marquer le début du build
              currentBuild.result = 'SUCCESS'
              notifyBuild('PENDING', 'Build démarré')
            }
          }
        }
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Test') {
            steps {
                bat 'npm test'
            }
        }

        stage('Archive') {
            steps {
                archiveArtifacts artifacts: 'build/**/*', allowEmptyArchive: true
            }
        }
    post {
      success {
        notifyBuild('SUCCESS', 'Build réussi')
      }
      failure {
        notifyBuild('FAILURE', 'Build échoué')
      }
    }
    
    def notifyBuild(String buildStatus, String buildMessage) {
      step([
        $class: 'GitHubCommitStatusSetter',
        reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/KolyyaTransportationUnit/ccidexemplereact.git"], // Remplacez USER/REPO par votre utilisateur et dépôt
        contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins"],
        statusResultSource: [$class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: buildMessage, state: buildStatus]]]
      ])
    }
    }

}

