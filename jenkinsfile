pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Test unities') {
            steps {
                bat 'npm test'
            }
        }
    }

    post {
        success {
            script {
                // Définit le statut du commit à "success" sur GitHub
                setGitHubStatus('success', 'Build and tests succeeded')
            }
        }
        failure {
            script {
                // Définit le statut du commit à "failure" sur GitHub
                setGitHubStatus('failure', 'Build or tests failed')
            }
        }
    }
}

def setGitHubStatus(String state, String description) {
    step([
        $class: "GitHubCommitStatusSetter",
        reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/KolyyaTransportationUnit/ccidexemplereact"],
        contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build"],
        errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
        statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: description, state: state]] ]
    ])
}
